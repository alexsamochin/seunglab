function Gsparse = Dense2SparseGraphAssym(Gdense,nhood)
% converts a dense graph to an assymmetric sparse graph
% Gdense: dense lattice graph
% nhood: lattice neighborhood, as generated by mknhood.m

sz = size(Gdense(:,:,:,1));
n = prod(sz);
% if volume is flat in the 3rd dimension
if (numel(sz)==2) sz(3)=1; end

[i,j,k] = ndgrid(1:sz(1),1:sz(2),1:sz(3));
Gsparse = sparse(n,n);

for nbor = 1:size(nhood,1),
	% this funky bit of code finds the indices of the pairs of nodes connected by this edge, for all nodes!
	idxi = max(1-nhood(nbor,1),1):min(sz(1)-nhood(nbor,1),sz(1));
	idxj = max(1-nhood(nbor,2),1):min(sz(2)-nhood(nbor,2),sz(2));
	idxk = max(1-nhood(nbor,3),1):min(sz(3)-nhood(nbor,3),sz(3));
	ii = i(idxi,idxj,idxk);
	jj = j(idxi,idxj,idxk);
	kk = k(idxi,idxj,idxk);
	nodes1 = sub2ind(sz,ii(:),jj(:),kk(:));
	ii = ii+nhood(nbor,1);
	jj = jj+nhood(nbor,2);
	kk = kk+nhood(nbor,3);
	nodes2 = sub2ind(sz,ii(:),jj(:),kk(:));
	
	% extract the edges for these nodes
	edges = Gdense(idxi,idxj,idxk,nbor);

	% insert them into the sparse graph
	Gsparse = Gsparse + sparse(nodes1,nodes2,edges(:),n,n);
end
